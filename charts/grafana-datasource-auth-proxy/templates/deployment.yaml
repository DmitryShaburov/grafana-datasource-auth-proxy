---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "grafana-datasource-auth-proxy.fullname" . }}"
  labels:
    app.kubernetes.io/name: "{{ include "grafana-datasource-auth-proxy.name" . }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ include "grafana-datasource-auth-proxy.chart" . }}"
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ include "grafana-datasource-auth-proxy.name" . }}"
      app.kubernetes.io/instance: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ include "grafana-datasource-auth-proxy.name" . }}"
        app.kubernetes.io/instance: "{{ .Release.Name }}"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      containers:
        - name: "{{ include "grafana-datasource-auth-proxy.name" . }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          args:
            - "-config=/config/config.yaml"
          env:
            - name: LOG_FORMAT
              value: "{{ .Values.log.format }}"
            - name: LOG_LEVEL
              value: "{{ .Values.log.level }}"
{{- if .Values.grafana.host }}
            - name: GF_SERVER_DOMAIN
              value: "{{ .Values.grafana.host }}"
{{- end }}
{{- if .Values.grafana.secret }}
            - name: GF_SECURITY_SECRET_KEY
              value: "{{ .Values.grafana.secret }}"
{{- end }}
{{- if .Values.database.name }}
            - name: GF_DATABASE_NAME
              value: "{{ .Values.database.name }}"
{{- end }}
{{- if .Values.database.host }}
            - name: GF_DATABASE_HOST
              value: "{{ .Values.database.host }}"
{{- end }}
{{- if .Values.database.user }}
            - name: GF_DATABASE_USER
              value: "{{ .Values.database.host }}"
{{- end }}
{{- if .Values.database.password }}
            - name: GF_DATABASE_PASSWORD
              value: "{{ .Values.database.host }}"
{{- end }}
{{- range $key, $value := .Values.extraEnv }}
            - name: {{ $key }}
              value: {{ $value | quote }}
{{- end }}
          envFrom: {{- toYaml .Values.envFrom | nindent 12 }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3000
            initialDelaySeconds: 15
          readinessProbe:
            httpGet:
              path: /healthz
              port: 3000
            initialDelaySeconds: 5
          volumeMounts:
            - mountPath: /config
              name: config
      volumes:
        - name: config
          configMap:
            name: "{{ template "grafana-datasource-auth-proxy.fullname" . }}"
